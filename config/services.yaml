# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: 'pt_BR'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # overload kernel exception
    #    App\Application\Project\ContentBundle\EventListener\ExceptionListener:
    #        tags:
    #            - { name: kernel.event_listener, event: kernel.exception }

    #    App\Application\Project\SecurityProviderApiBundle\EventListener\ExceptionListener:
    #        tags:
    #            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }
    #
    #


    # ####################################################################################
    # injeções de dependências

    #    app.menu_listener:
    #        class: App\Application\Project\ContentBundle\EventListener\MenuBuilderListener
    #        tags:
    #            - { name: kernel.event_listener, event: sonata.admin.event.configure.menu.sidebar, method: addMenuItems }
    #        arguments:


    #    admin.custom:
    #        class: App\Admin\CustomAdmin
    #        tags:
    #            - { name: sonata.admin, model_class: App\Entity\Custom, manager_type: orm, label: Category, security_handler: App\Application\Project\AdminBundle\Security\Handler }


    # ####################################################################################
    # serviços padrões da estrutura do projeto

    # Content Bundle
    project.content.content:
        class: App\Application\Project\ContentBundle\Admin\ContentAdmin
        tags:
            - {
                name: sonata.admin,
                manager_type: orm,
                model_class: App\Application\Project\ContentBundle\Entity\Content,
                controller: App\Application\Project\ContentBundle\Controller\ContentAdminController,
                show_in_dashboard: false,
                on_top: false,
                group: "Content",
                label: Content,
                icon: 'fa fa-solid fa-passport',
            }
            #- { name: sonata.admin, manager_type: orm, group: "Content", label: User, on_top: false, icon: 'fa fa-solid fa-user',, show_in_dashboard: false }

    project.content.setting:
        class: App\Application\Project\SettingBundle\Admin\SmtpEmailAdmin
        tags:
            - {
                name: sonata.admin,
                manager_type: orm,
                model_class: App\Application\Project\SettingBundle\Entity\SmtpEmail,
                controller: App\Application\Project\SettingBundle\Controller\SmtpEmailAdminController,
                show_in_dashboard: true,
                on_top: false,
                group: "Configurações",
                label: SMTP,
                icon: 'fas fa-cogs',
            }
            #- { name: sonata.admin, manager_type: orm, group: "Content", label: User, on_top: false, icon: 'fa fa-solid fa-user',, show_in_dashboard: false }






    # ####################################################################################
    # Provedor de usuário ADMIN

    project.security.provider.admin.user:
        class: App\Application\Project\SecurityAdminBundle\Admin\UserAdminAdmin
        calls:
        tags:
            - {
                name: sonata.admin,
                manager_type: orm,
                model_class: App\Application\Project\SecurityAdminBundle\Entity\UserAdmin,
                controller: App\Application\Project\SecurityAdminBundle\Controller\UserAdminAdminController,
                show_in_dashboard: true,
                on_top: false,
                group: "Acesso Admin",
                label: Administradores,
                icon: 'fa fa-solid fa-shield-alt',
            }

    project.security.provider.admin.group:
        class: App\Application\Project\SecurityAdminBundle\Admin\GroupAdminAdmin
        calls:
        tags:
            - {
                name: sonata.admin,
                manager_type: orm,
                model_class: App\Application\Project\SecurityAdminBundle\Entity\GroupAdmin,
                controller: App\Application\Project\SecurityAdminBundle\Controller\GroupAdminAdminController,
                show_in_dashboard: true,
                on_top: false,
                group: "Acesso Admin",
                label: Grupos,
                icon: 'fa fa-solid fa-shield-alt',
            }

    # ####################################################################################
    # Provedor de usuário API

    project.security.provider.api.user:
        class: App\Application\Project\SecurityUserBundle\Admin\UserAdmin
        tags:
            - {
                name: sonata.admin,
                manager_type: orm,
                model_class: App\Application\Project\SecurityUserBundle\Entity\User,
                controller: App\Application\Project\SecurityUserBundle\Controller\UserAdminController,
                show_in_dashboard: true,
                on_top: false,
                group: "Acesso Usuários",
                label: Usuários,
                icon: 'fa fa-solid fa-users',
            }

    project.security.provider.api.group:
        class: App\Application\Project\SecurityUserBundle\Admin\GroupAdmin
        tags:
            - {
                name: sonata.admin,
                manager_type: orm,
                model_class: App\Application\Project\SecurityUserBundle\Entity\Group,
                controller: App\Application\Project\SecurityUserBundle\Controller\GroupAdminController,
                show_in_dashboard: true,
                on_top: false,
                group: "Acesso Usuários",
                label: Grupos,
                icon: 'fa fa-solid fa-users',
            }

    # ####################################################################################
    # por favor, note que as últimas definições sao da estrutura padrão do projeto
    # adicione mais definições de serviço quando for necessária abaixo


    # Services Schemas Bundle
    # ####################################################################################
    schema.provabundle.prova:
        class: App\Application\Schema\ProvaBundle\Admin\ProvaAdmin
        tags:
            - {
                name: sonata.admin,
                manager_type: orm,
                model_class: App\Application\Schema\ProvaBundle\Entity\Prova,
                controller: App\Application\Schema\ProvaBundle\Controller\ProvaAdminController,
                show_in_dashboard: true,
                on_top: true,
                group: "Prova",
                label: Prova,
                icon: 'fa fa-solid fa-book',
            }

    schema.tipoprovabundle.tipoprova:
        class: App\Application\Schema\TipoProvaBundle\Admin\TipoProvaAdmin
        tags:
            - {
                name: sonata.admin,
                manager_type: orm,
                model_class: App\Application\Schema\TipoProvaBundle\Entity\TipoProva,
                controller: App\Application\Schema\TipoProvaBundle\Controller\TipoProvaAdminController,
                show_in_dashboard: true,
                on_top: true,
                group: "TipoProva",
                label: TipoProva,
                icon: 'fa fa-solid fa-book',
            }

    schema.disciplinabundle.disciplina:
        class: App\Application\Schema\DisciplinaBundle\Admin\DisciplinaAdmin
        tags:
            - {
                name: sonata.admin,
                manager_type: orm,
                model_class: App\Application\Schema\DisciplinaBundle\Entity\Disciplina,
                controller: App\Application\Schema\DisciplinaBundle\Controller\DisciplinaAdminController,
                show_in_dashboard: true,
                on_top: true,
                group: "Disciplina",
                label: Disciplina,
                icon: 'fa fa-solid fa-book',
            }

    schema.professorbundle.professor:
        class: App\Application\Schema\ProfessorBundle\Admin\ProfessorAdmin
        tags:
            - {
                name: sonata.admin,
                manager_type: orm,
                model_class: App\Application\Schema\ProfessorBundle\Entity\Professor,
                controller: App\Application\Schema\ProfessorBundle\Controller\ProfessorAdminController,
                show_in_dashboard: true,
                on_top: true,
                group: "Professor",
                label: Professor,
                icon: 'fa fa-solid fa-book',
            }

    schema.gradecurricularbundle.gradecurricular:
        class: App\Application\Schema\GradeCurricularBundle\Admin\GradeCurricularAdmin
        tags:
            - {
                name: sonata.admin,
                manager_type: orm,
                model_class: App\Application\Schema\GradeCurricularBundle\Entity\GradeCurricular,
                controller: App\Application\Schema\GradeCurricularBundle\Controller\GradeCurricularAdminController,
                show_in_dashboard: true,
                on_top: true,
                group: "GradeCurricular",
                label: GradeCurricular,
                icon: 'fa fa-solid fa-book',
            }

    schema.cursobundle.curso:
        class: App\Application\Schema\CursoBundle\Admin\CursoAdmin
        tags:
            - {
                name: sonata.admin,
                manager_type: orm,
                model_class: App\Application\Schema\CursoBundle\Entity\Curso,
                controller: App\Application\Schema\CursoBundle\Controller\CursoAdminController,
                show_in_dashboard: true,
                on_top: true,
                group: "Curso",
                label: Curso,
                icon: 'fa fa-solid fa-book',
            }

